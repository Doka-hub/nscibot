from aiogram import types
from aiogram.dispatcher.storage import FSMContext

# local imports
from states.bot.admin import ProviderState

from utils.bot.db_api.user import get_or_create_user, set_user__vk_link

from loader import bot_i18n_gettext as _, provider_dp


async def provider__vk_link_set(callback: types.CallbackQuery):
    """
    –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö —é–∑–µ—Ä—É
    :param callback:
    :return:
    """

    '''callback.data = "admin_provider_vk_link_set 24" (24 - provider_user_id)'''
    provider_user_id = callback.data.replace('admin_provider_vk_link_set ', '')

    await provider_dp.storage.set_data(user=callback.from_user.id, data={'user_id': provider_user_id})

    await ProviderState.vk_link.set()
    await callback.message.answer(_('–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –í–ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: \n'
                                    '`https://vk.com/ajour7km`'), parse_mode='markdown')


def provider__vk_link_set_handler(message: types.Message, state: FSMContext):
    vk_link = message.text

    data = await state.get_data()
    provider_user_id = data.get('user_id')

    if 'vk.com' not in vk_link:
        message.answer(_('–°—Å—ã–ª–∫–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã –≤–≤–µ–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç vk.com, '
                         '–≤–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å—Å—ã–ª–∫—É –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: \n'
                         '`https://vk.com/ajour7km`'), parse_mode='markdown')
    else:
        provider, provider_created = await get_or_create_user(provider_user_id)
        await set_user__vk_link(provider, vk_link)
        message.answer(_('–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–∏–ª–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Å–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, '
                         '—Ç–µ–ø–µ—Ä—å –Ω–∞ —Å–∞–π—Ç–µ –ø–æ—è–≤—è—Ç—Å—è –µ–≥–æ —Ç–æ–≤–∞—Ä—ã üëç'))
        await state.finish()
